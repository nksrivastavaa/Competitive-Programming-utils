{
	"": {
		"prefix": "nt",
		"body": [
			"#define modulo(a, b) (a % b < 0 ? a % b + b : a % b)",
			"",
			"long long gcd(long long a, long long b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}",
			"long long lcm(long long a, long long b) {return a * b / gcd(a, b);}",
			"long long expo(long long a, long long b, long long mod) {long long res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}",
			"long long mod_add(long long a, long long b, long long m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}",
			"long long mod_mul(long long a, long long b, long long m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}",
			"long long mod_sub(long long a, long long b, long long m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}",
			"long long mod_div(long long a, long long b, long long m) {a = a % m; b = b % m; return (mod_mul(a, expo(b, m - 2, m), m) + m) % m;}  //only for prime m",
			"",
			"const long long mod = 1e9 + 7;",
			"const long long mod2 = 998244353;"
		],
		"description": ""
	}
}